// Code generated by mockery v2.41.0. DO NOT EDIT.

package mocks

import (
	requests "project-skbackend/internal/controllers/requests"

	mock "github.com/stretchr/testify/mock"
)

// IMailService is an autogenerated mock type for the IMailService type
type IMailService struct {
	mock.Mock
}

// SendMail provides a mock function with given fields: req, data
func (_m *IMailService) SendMail(req requests.SendMail, data interface{}) error {
	ret := _m.Called(req, data)

	if len(ret) == 0 {
		panic("no return value specified for SendMail")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(requests.SendMail, interface{}) error); ok {
		r0 = rf(req, data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SendResetPassword provides a mock function with given fields: reqdef, reqdata
func (_m *IMailService) SendResetPassword(reqdef requests.SendMail, reqdata requests.ResetPasswordEmail) error {
	ret := _m.Called(reqdef, reqdata)

	if len(ret) == 0 {
		panic("no return value specified for SendResetPassword")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(requests.SendMail, requests.ResetPasswordEmail) error); ok {
		r0 = rf(reqdef, reqdata)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIMailService creates a new instance of IMailService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIMailService(t interface {
	mock.TestingT
	Cleanup(func())
}) *IMailService {
	mock := &IMailService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
