// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks

import (
	models "project-skbackend/internal/models"

	mock "github.com/stretchr/testify/mock"

	responses "project-skbackend/internal/controllers/responses"
)

// IBaseRoleService is an autogenerated mock type for the IBaseRoleService type
type IBaseRoleService struct {
	mock.Mock
}

// GetAdminByBaseRole provides a mock function with given fields: roleres
func (_m *IBaseRoleService) GetAdminByBaseRole(roleres responses.BaseRole) (*models.Admin, error) {
	ret := _m.Called(roleres)

	if len(ret) == 0 {
		panic("no return value specified for GetAdminByBaseRole")
	}

	var r0 *models.Admin
	var r1 error
	if rf, ok := ret.Get(0).(func(responses.BaseRole) (*models.Admin, error)); ok {
		return rf(roleres)
	}
	if rf, ok := ret.Get(0).(func(responses.BaseRole) *models.Admin); ok {
		r0 = rf(roleres)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Admin)
		}
	}

	if rf, ok := ret.Get(1).(func(responses.BaseRole) error); ok {
		r1 = rf(roleres)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIBaseRoleService creates a new instance of IBaseRoleService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIBaseRoleService(t interface {
	mock.TestingT
	Cleanup(func())
}) *IBaseRoleService {
	mock := &IBaseRoleService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
